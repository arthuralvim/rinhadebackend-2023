
networks:
  default:
    driver: bridge

x-postgres-environment: &postgres-environment
  POSTGRES_PASSWORD: super-password
  POSTGRES_USER: rinha_user
  POSTGRES_DB: rinha_db

x-app-environment: &app-environment
  DATABASE_URL: "postgresql+asyncpg://rinha_user:super-password@database:5432/rinha_db"
  REDIS_URL: "redis://cache:6379/2"

services:
  gatling:
    extends:
        file: ./gatling/docker-compose.yml
        service: gatling
    environment:
      GATLING_RESULT_PREFIX: 'backend_fastapi'
      GATLING_DESCRIPTION: "StressTest-Rinha-de-Backend"

  api1:
    extends:
      file: ./backend_fastapi/docker-compose.yml
      service: api1
    depends_on:
      - database
      - cache
    environment:
      <<: [*app-environment, *postgres-environment]
      RUN_INITIAL_DATA: "False"
      TEST_DATABASE_URL: "postgresql+asyncpg://rinha_user:super-password@database:5432/test_rinha_db"
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.20GB'

  api2:
    extends:
      file: ./backend_fastapi/docker-compose.yml
      service: api2
    depends_on:
      - database
      - cache
    environment:
      RUN_INITIAL_DATA: "True"
      <<: [*app-environment, *postgres-environment]
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.20GB'

  cache:
    extends:
      file: ./cache/docker-compose.yml
      service: cache
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'

  proxy:
    extends:
      file: ./proxy/docker-compose.yml
      service: proxy
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: '0.20'
          memory: '0.3GB'

  database:
    extends:
      file: ./database/docker-compose.yml
      service: database
    environment:
      <<: *postgres-environment
    deploy:
      resources:
        limits:
          cpus: '0.70'
          memory: '2.0GB'
